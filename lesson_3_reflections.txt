When would you want to use a remote repository rather than keeping all your work local?
When you're collaborating with someone else or for backup purposes.

Why might you want to always pull changes manually rather than having Git automatically
stay up-to-date with your remote repository?
Because you might make a big change over the course of several commits.

Describe the differences between forks, clones, and branches. When would you use one
instead of another?
Clones are complete copies of a branch of a repository. Forks are clones within GitHub.
Branches are typically used for bigger changes, e.g. an experimental feature. Clones
might be used for collaborating. Forks can be used to make a copy of someone else's work
so you can make your own changes to it.

What is the benefit of having a copy of the last known state of the remote stored locally?
It allows you to see changes other people have made which might inform your own future
changes.

How would you collaborate without using Git or GitHub? What would be easier, and what
would be harder?
If my collaborators and I were in the same place, we could pair program. Another option
would be to take turns making changes to files. Both options potentially inhibit
development. The benefit would be never having to fix merge conflicts.

When would you want to make changes in a separate branch rather than directly in master?
What benefits does each approach have?
Making changes directly in master is much easier than creating a separate branch to
merge later, but it probably only makes sense if you're working alone. The benefit of
making changes in a branch is that you can develop on your branch incrementally without
interfering with others' work. You can also then create a pull request (if you're using
GitHub or Stash) so others can review your changes before they're merged into the master
branch.
